package bitcoin_interpreter

var (
	Script_ReverseEndian32Or33 = `
		OP_SIZE
		0x21 OP_EQUAL
		OP_DUP
		OP_TOALTSTACK
		OP_IF
			OP_1 OP_SPLIT
		OP_ENDIF
	` + Script_ReverseEndian32 + `
		OP_FROMALTSTACK
		OP_IF
			OP_CAT
		OP_ENDIF
	`

	// Script_ReverseEndian32 takes a 32 byte top stack item and reverses the bytes.
	Script_ReverseEndian32 = `
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT
		OP_1 OP_SPLIT

		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
		OP_SWAP OP_CAT
	`
)
